<github on windows>
安裝
git help
git config
git config --list
使用shell
使用hub

<簡介>
traced; staged; commited;
refs: HEAD(default), branch, SHA-1(>=4), tag

<一個人玩的單機GIT>
git init
git clone
rm ./.git/\
.gitignore
git add(stage)
git commit
git diff
git diff --word-diff
git commit --amend
git checkout <refs> (--) file
git rm --cached
git rm
git clean
git reset
git status
git log
git show
git branch
git branch -m
git branch -d
git branch -D
git merge
git rebase
git rebase --onto <target branch> <over branch> <from branch>
git rebase -i
git cherry-pick

<一個人玩的線上GIT>
git push --force(-f)
git fetch
git pull
git push
git clone/init --bare
file://(FS, share), http(s)://(apache, github), git://(git-daemon), user@server:path/repo.git(SSH)

<大家一起的線上GIT>
git remote
git daemon
git request-pull <origin> <your public repo>
git format-patch
git apply --check
git apply
git am


<稍微進階的使用>
git alias
git tag -a
git tag -d
git describe
git push <remote server> <tag name>
git push <remote server> :refs/tags/<tag name>
git push <from branch>:<to branch>
git stash
git stash list
git stash apply "stash@{n}"
git stash drop
git stash pop (apply+drop)
git stash show -p | git apply -R (reset to the stash)
git stash branch
git push -u <remote server> <branch>
git log --left-right <a>...<b>

<other commands>
git add -i
git blame
git revert (reset with log)
git shortlog
git gui
git filter-branch
git bisect start
git bisect bad
git bisect good
git bisect reset
git bisect run

"refs@{n or t}"
HEAD^
HEAD^2(when merge)
HEAD~3 = HEAD^^^
<from> <to> [^HEAD(not)]
<not in>..<but in>
<diff of a>...<and b>

refs:refs